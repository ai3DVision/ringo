Benchmarks
Nov 27, 2013

New directory:
  use-cases/07-benchmarks

Input file:
  /dfs/ilfs2/0/ringo/benchmarks/soc-LiveJournal1.txt
	original file from snap.staford.edu
  /dfs/ilfs2/0/ringo/benchmarks/soc-LiveJournal1-noheader.txt
	file without the header
  /dfs/ilfs2/0/ringo/benchmarks/twitter_rv.txt
	original file from the Web, twitter-2010

----------------------
Benchmark 1:
- read input text file with 2 columns and build a table with 2 integer columns
- save table to file in the binary format

madmax3:/lfs/local/0/rok/ringo> python 01-tbtxt2bin.py soc-LiveJournal1-noheader.txt soc-LiveJournal1.table
[load text]       Elapsed: 30.63 seconds, Rows: 68993773
__loadtext__            cpu(s) 30.541   mem(MB) 4721.224
[save bin]        Elapsed: 4.32 seconds, Rows: 68993773
__savebin__             cpu(s) 4.305    mem(MB) 4721.224

madmax3:/lfs/local/0/rok/ringo> python 01-tbtxt2bin.py twitter_rv.txt twitter_rv.table
[load text]       Elapsed: 584.90 seconds, Rows: 1468365182
__loadtext__            cpu(s) 583.000  mem(MB) 79119.416
[save bin]        Elapsed: 100.47 seconds, Rows: 1468365182
__savebin__             cpu(s) 100.195  mem(MB) 79119.416

----------------------
Benchmark 2:
- read table from a file with the binary format
- create a graph from the table
- create table from the graph

- after new hash table (Rok), parallel, 12/07/2013

madmax7:/lfs/local/0/rok/ringo> time python 22-tbbin2gr2tb.py soc-LiveJournal1.table 
[load bin]        Elapsed: 6.01 seconds, Rows: 68993773
__loadbin__     	cpu(s) 5.994	mem(MB) 1361.660
[create graph]    Elapsed: 6.40 seconds, Nodes: 4847571
__creategraph__ 	cpu(s) 371.937	mem(MB) 2484.372
graph type <class 'snap.PNGraph'>
[table from graph]Elapsed: 5.78 seconds, Rows: 68993773
__tablefromgraph__	cpu(s) 15.620	mem(MB) 4221.228

madmax7:/lfs/local/0/rok/ringo> time python 22-tbbin2gr2tb.py twitter_rv.table 
[load bin]        Elapsed: 116.31 seconds, Rows: 1468365182
__loadbin__     	cpu(s) 115.956	mem(MB) 28693.140
[create graph]    Elapsed: 116.74 seconds, Nodes: 41652230
__creategraph__ 	cpu(s) 7458.773	mem(MB) 41198.800
graph type <class 'snap.PNGraph'>
[table from graph]Elapsed: 106.35 seconds, Rows: 1468365182
__tablefromgraph__	cpu(s) 115.410	mem(MB) 69772.640

- after new hash table (Rok), sequential, 12/07/2013

madmax7:/lfs/local/0/rok/ringo> time python 22-tbbin2gr2tb.py soc-LiveJournal1.table 
[load bin]        Elapsed: 6.06 seconds, Rows: 68993773
__loadbin__     	cpu(s) 6.041	mem(MB) 1361.656
[create graph]    Elapsed: 17.12 seconds, Nodes: 4847571
__creategraph__ 	cpu(s) 17.078	mem(MB) 2868.540
graph type <class 'snap.PNGraph'>
[table from graph]Elapsed: 5.62 seconds, Rows: 68993773
__tablefromgraph__	cpu(s) 5.607	mem(MB) 4703.712

madmax7:/lfs/local/0/rok/ringo> time python 22-tbbin2gr2tb.py twitter_rv.table 
[load bin]        Elapsed: 116.47 seconds, Rows: 1468365182
__loadbin__     	cpu(s) 116.099	mem(MB) 28693.140
TNGraph::New reserved 100663319
[create graph]    Elapsed: 542.19 seconds, Nodes: 41652230
__creategraph__ 	cpu(s) 540.928	mem(MB) 47168.672
graph type <class 'snap.PNGraph'>
[table from graph]Elapsed: 112.14 seconds, Rows: 1468365182
__tablefromgraph__	cpu(s) 111.747	mem(MB) 76528.956

- after optimization, 12/01/2013

madmax3:/lfs/local/0/rok/ringo> python 02-tbbin2gr2tb.py soc-LiveJournal1.table
[load bin]        Elapsed: 6.03 seconds, Rows: 68993773
__loadbin__     	cpu(s) 6.017	mem(MB) 1400.184
[create graph]    Elapsed: 60.97 seconds, Rows: 68993773
__creategraph__ 	cpu(s) 60.791	mem(MB) 7939.684
[table from graph]Elapsed: 6.76 seconds, Rows: 68993773
__tablefromgraph__	cpu(s) 6.737	mem(MB) 8757.916

madmax3:/lfs/local/0/rok/ringo> python 02-tbbin2gr2tb.py twitter_rv.table
[load bin]        Elapsed: 114.68 seconds, Rows: 1468365182
__loadbin__     	cpu(s) 114.296	mem(MB) 28693.016
[create graph]    Elapsed: 1675.08 seconds, Rows: 1468365182
__creategraph__ 	cpu(s) 1669.950	mem(MB) 124849.312
[table from graph]Elapsed: 126.98 seconds, Rows: 1468365182
__tablefromgraph__	cpu(s) 126.447	mem(MB) 137432.264

- before optimization

madmax3:/lfs/local/0/rok/ringo> python 02-tbbin2gr2tb.py soc-LiveJournal1.table
[load bin]        Elapsed: 6.05 seconds, Rows: 68993773
__loadbin__             cpu(s) 6.032    mem(MB) 1361.532
[create graph]    Elapsed: 83.52 seconds, Rows: 68993773
__creategraph__         cpu(s) 83.287   mem(MB) 8572.868
[table from graph]Elapsed: 6.12 seconds, Rows: 68993773
__tablefromgraph__      cpu(s) 6.102    mem(MB) 8761.336

madmax3:/lfs/local/0/rok/ringo> python 02-tbbin2gr2tb.py twitter_rv.table
[load bin]        Elapsed: 114.16 seconds, Rows: 1468365182
__loadbin__             cpu(s) 113.792  mem(MB) 28693.012
[create graph]    Elapsed: 2490.36 seconds, Rows: 1468365182
__creategraph__         cpu(s) 2483.698 mem(MB) 134119.948
[table from graph]Elapsed: 115.93 seconds, Rows: 1468365182
__tablefromgraph__      cpu(s) 115.485  mem(MB) 137429.552

----------------------
Benchmark 3:
- read table from a file with the binary format
- select rows with the first value < 10000, create new table

madmax3:/lfs/local/0/rok/ringo> python 03-tbselltnewtb.py soc-LiveJournal1.table
[load bin]        Elapsed: 6.63 seconds, Rows: 68993773
__loadbin__       cpu(s) 6.613  mem(MB) 1362.600
[selected < 1000 new table]Elapsed: 5.01 seconds, Rows: 581776
__selectedlt1000newtable__  cpu(s) 4.995  mem(MB) 1362.600

madmax3:/lfs/local/0/rok/ringo> python 03-tbselltnewtb.py twitter_rv.table
[load bin]        Elapsed: 116.07 seconds, Rows: 1468365182
__loadbin__             cpu(s) 115.681  mem(MB) 28693.008
[selected < 1000 new table]Elapsed: 92.47 seconds, Rows: 8459175
__selectedlt1000newtable__      cpu(s) 92.237   mem(MB) 28693.008

----------------------
Benchmark 4:
- read table from a file with the binary format
- select rows with the first value > 10000, create new table

madmax3:/lfs/local/0/rok/ringo> time python 04-tbselgtnewtb.py soc-LiveJournal1.table
[load bin]        Elapsed: 5.99 seconds, Rows: 68993773
__loadbin__             cpu(s) 5.971    mem(MB) 1361.528
[selected > 1000 new table]Elapsed: 22.20 seconds, Rows: 68411783
__selectedgt1000newtable__      cpu(s) 22.139   mem(MB) 6327.664

madmax3:/lfs/local/0/rok/ringo> time python 04-tbselgtnewtb.py twitter_rv.table
[load bin]        Elapsed: 116.72 seconds, Rows: 1468365182
__loadbin__             cpu(s) 116.315  mem(MB) 28693.008
[selected > 1000 new table]Elapsed: 404.16 seconds, Rows: 1459906007
__selectedgt1000newtable__      cpu(s) 402.767  mem(MB) 113369.804

----------------------
Benchmark 5:
- read table from a file with the binary format
- select rows with the first value < 10000, in place

madmax3:/lfs/local/0/rok/ringo> python 05-tbselltinplace.py soc-LiveJournal1.table
[load bin]        Elapsed: 5.98 seconds, Rows: 68993773
__loadbin__       cpu(s) 5.962  mem(MB) 1362.568
[selected < 1000 in place]Elapsed: 4.27 seconds, Rows: 581776
__selectedlt1000inplace__ cpu(s) 4.261  mem(MB) 1362.568

madmax3:/lfs/local/0/rok/ringo> python 05-tbselltinplace.py twitter_rv.table
[load bin]        Elapsed: 114.56 seconds, Rows: 1468365182
__loadbin__             cpu(s) 114.206  mem(MB) 28693.000
[selected < 1000 in place]Elapsed: 89.43 seconds, Rows: 8459175
__selectedlt1000inplace__       cpu(s) 89.230   mem(MB) 28693.000

----------------------
Benchmark 6:
- read table from a file with the binary format
- select rows with the first value > 10000, in place

madmax3:/lfs/local/0/rok/ringo> python 06-tbselgtinplace.py soc-LiveJournal1.table
[load bin]        Elapsed: 6.61 seconds, Rows: 68993773
__loadbin__       cpu(s) 6.590  mem(MB) 1362.572
[selected > 1000 in place]Elapsed: 3.16 seconds, Rows: 68411783
__selectedgt1000inplace__ cpu(s) 3.150  mem(MB) 1362.572

madmax3:/lfs/local/0/rok/ringo> python 06-tbselgtinplace.py twitter_rv.table
[load bin]        Elapsed: 114.52 seconds, Rows: 1468365182
__loadbin__             cpu(s) 114.132  mem(MB) 28693.000
[selected > 1000 in place]Elapsed: 69.68 seconds, Rows: 1459906007
__selectedgt1000inplace__       cpu(s) 69.504   mem(MB) 28693.000

----------------------
Benchmark 7:
- read two column table t1 from a file with the binary format
- read one column table t2 from a file with the text format format
- join t2 and t1 on first columns

madmax3:/lfs/local/0/rok/ringo> time python 07-join.py soc-LiveJournal1.table soc-LiveJournal1_10k.txt
[load bin]        Elapsed: 6.01 seconds, Rows: 68993773
__loadbin__             cpu(s) 5.996    mem(MB) 1361.548
[load text]       Elapsed: 0.00 seconds, Rows: 10000
__loadtext__            cpu(s) 0.004    mem(MB) 1361.548
[join]            Elapsed: 6.91 seconds, Rows: 1128462
__join__                cpu(s) 6.891    mem(MB) 1361.548

madmax3:/lfs/local/0/rok/ringo> time python 07-join.py twitter_rv.table twitter_rv_10k.txt
[load bin]        Elapsed: 113.69 seconds, Rows: 1468365182
__loadbin__             cpu(s) 113.319  mem(MB) 28693.028
[load text]       Elapsed: 0.00 seconds, Rows: 10000
__loadtext__            cpu(s) 0.003    mem(MB) 28693.028
[join]            Elapsed: 139.40 seconds, Rows: 37748898
__join__                cpu(s) 139.087  mem(MB) 28693.028

madmax3:/lfs/local/0/rok/ringo> time python 07-join.py soc-LiveJournal1.table soc-LiveJournal1_all.txt 
[load bin]        Elapsed: 6.01 seconds, Rows: 68993773
__loadbin__             cpu(s) 5.995    mem(MB) 1361.548
[load text]       Elapsed: 1.70 seconds, Rows: 4837571
__loadtext__            cpu(s) 1.701    mem(MB) 1394.740
[join]            Elapsed: 37.52 seconds, Rows: 68976030
__join__                cpu(s) 37.408   mem(MB) 6824.852

madmax3:/lfs/local/0/rok/ringo> time python 07-join.py twitter_rv.table twitter_rv_all.txt 
[load bin]        Elapsed: 115.75 seconds, Rows: 1468365182
__loadbin__             cpu(s) 115.366  mem(MB) 28693.028
[load text]       Elapsed: 13.87 seconds, Rows: 41642230
__loadtext__            cpu(s) 13.826   mem(MB) 28693.028
[join]            Elapsed: 700.61 seconds, Rows: 1467617557
__join__                cpu(s) 698.248  mem(MB) 120987.936

----------------------
Benchmark 8:
reads the posts table from the Stackoverflow dataset, and for
each user, computes the sum of the scores of this user's posts

madmax3:~/ringo/use-cases/07-benchmarks$ python 08-groupaggr.py /dfs/ilfs2/0/ringo/StackOverflow_2/posts.tsv
[load text]       Elapsed: 51.72 seconds, Rows: 15838934
__loadtext__      cpu(s) 50.991 mem(MB) 1466.048
[group_aggregate] Elapsed: 35.14 seconds, Rows: 15838934
__group_aggregate__ cpu(s) 34.742 mem(MB) 2237.212

----------------------
Benchmark 9:
reads the posts table form the StackOverflow dataset, and for 
each post, finds the next post by the same user in chronological
order

madmax3:~/ringo/use-cases/07-benchmarks$ python 09-isnextk.py /dfs/ilfs2/0/ringo/StackOverflow_2/posts.tsv
[load text]       Elapsed: 49.63 seconds, Rows: 15838934
__loadtext__      cpu(s) 49.497 mem(MB) 1469.060
[isnextk]         Elapsed: 147.29 seconds, Rows: 14490600
__isnextk__       cpu(s) 146.891  mem(MB) 2259.884

----------------------
Benchmark 10:
reads the posts table form the StackOverflow dataset, and for 
each post, finds the next post by the same user in chronological
order

madmax:~/ringo/use-cases/07-benchmarks$ python 10-graphseq.py /dfs/ilfs2/0/ringo/StackOverflow_2/posts.tsv 
[load text]       Elapsed: 23.06 seconds, Rows: 15838934
__loadtext__      cpu(s) 22.988 mem(MB) 1468.016
[join]            Elapsed: 6.21 seconds, Rows: 3349208
__join__          cpu(s) 32.633 mem(MB) 1965.824
[graphseq]        Elapsed: 0.92 seconds
__graphseq__      cpu(s) 10.022 mem(MB) 1965.824

----------------------
Benchmark 11:
reads the post table from the StackOverflow dataset, and creates
a graph for each topic, where in each graph, a user A points to a 
user B if A accepted at least one answer from B

madmax:~/ringo/use-cases/07-benchmarks$ python 11-graphgroup.py /dfs/ilfs2/0/ringo/StackOverflow_2/posts.tsv /dfs/ilfs2/0/ringo/StackOverflow_2/tags.tsv 

madmax:~/ringo/use-cases/07-benchmarks$ python 11-graphgroup.py /dfs/ilfs2/0/ringo/StackOverflow_2/posts.tsv /dfs/ilfs2/0/ringo/StackOverflow_2/tags.tsv
[load posts text] Elapsed: 10.56 seconds, Rows: 15838934
__loadpoststext__ cpu(s) 10.533 mem(MB) 878.112
[load tags text]  Elapsed: 16.44 seconds, Rows: 16413230
__loadtagstext__  cpu(s) 16.396 mem(MB) 1450.632
[join]            Elapsed: 12.56 seconds, Rows: 16413230
__join__          cpu(s) 107.156  mem(MB) 3175.132
[join]            Elapsed: 11.97 seconds, Rows: 9900425
__join__          cpu(s) 94.351 mem(MB) 4210.960
[graphseq]        Elapsed: 109.10 seconds
__graphseq__      cpu(s) 204.776  mem(MB) 11023.556


----------------------
Benchmark 12:
reads the post table from the StackOverflow dataset, creates a
graph where user A points to user B if A accepted at least one 
answer from B for a question about Python, computes the PageRank
score of each user in this graph, and saves the scores to a file

madmax:~/ringo/use-cases/07-benchmarks$ python 12-usecase.py /dfs/ilfs2/0/ringo/StackOverflow_joined/posts.tsv out.bin
[load posts text] Elapsed: 36.59 seconds, Rows: 26673279
__loadpoststext__ cpu(s) 36.494 mem(MB) 1773.420
[selected tag = 'python']Elapsed: 7.83 seconds, Rows: 214856
__selectedtagpython__ cpu(s) 7.815  mem(MB) 1773.420
[join]            Elapsed: 0.91 seconds, Rows: 141816
__join__          cpu(s) 22.627 mem(MB) 1773.420
[graph]           Elapsed: 0.11 seconds, Nodes: 59343
__graph__         cpu(s) 2.097  mem(MB) 1773.420
[pagerank]        Elapsed: 0.97 seconds, Rows: 59343
__pagerank__      cpu(s) 0.972  mem(MB) 1773.420
[save bin]        Elapsed: 0.01 seconds, Rows: 59343
__savebin__       cpu(s) 0.005  mem(MB) 1773.420


----------------------
Benchmark 13:
same as 12-usecase.py, but using PANDAS and NetworkX instead of
Ringo

madmax:~/ringo/use-cases/07-benchmarks$ python 13-usecase-pandas-networkx.py /dfs/ilfs2/0/ringo/StackOverflow_joined/posts.tsv out.pkl
[load posts text] Elapsed: 24.46 seconds, Length: 26673279
__loadpoststext__ cpu(s) 24.375 mem(MB) 4084.104
[selected tag = 'python']Elapsed: 2.60 seconds, Length: 214856
__selectedtagpython__ cpu(s) 2.589  mem(MB) 4084.104
[join]            Elapsed: 9.48 seconds, Length: 141816
__join__          cpu(s) 9.447  mem(MB) 4973.884
[graph]           Elapsed: 0.60 seconds, Length: 59343
__graph__         cpu(s) 0.603  mem(MB) 4973.884
[pagerank]        Elapsed: 27.51 seconds, Length: 59343
__pagerank__      cpu(s) 27.422 mem(MB) 4973.884
[save]            Elapsed: 0.02 seconds, Length: 59343
__save__          cpu(s) 0.009  mem(MB) 4973.884

----------------------
Benchmark 14:
same as 12-usecase.py, except that a table of "questions"
and a table of "answers" are explicitly created before joining

madmax:~/ringo/use-cases/07-benchmarks$ python 14-usecase-complete.py /dfs/ilfs2/0/ringo/StackOverflow_joined/posts.tsv out.bin

******* RESULTS ON LAPTOP (Martin) ********
[load posts text] Elapsed: 55.11 seconds, Rows: 26673279
__loadpoststext__ cpu(s) 55.069 mem(MB) 2871934.976
[select tag = 'python']Elapsed: 8.17 seconds, Rows: 214856
__selecttagpython__ cpu(s) 8.155  mem(MB) 2871934.976
[select questions]Elapsed: 0.00 seconds, Rows: 142207
__selectquestions__ cpu(s) 0.004  mem(MB) 2871934.976
[select answers]  Elapsed: 0.39 seconds, Rows: 16737213
__selectanswers__ cpu(s) 0.386  mem(MB) 2871934.976
[join]            Elapsed: 1.76 seconds, Rows: 141816
__join__          cpu(s) 1.755  mem(MB) 2871934.976
[graph]           Elapsed: 0.08 seconds, Nodes: 59343, Edges: 141816
__graph__         cpu(s) 0.083  mem(MB) 2871934.976
[pagerank]        Elapsed: 1.01 seconds, Rows: 59343
__pagerank__      cpu(s) 1.006  mem(MB) 2871934.976
[save bin]        Elapsed: 0.00 seconds, Rows: 59343
__savebin__       cpu(s) 0.003  mem(MB) 2871934.976

----------------------
Benchmark 15:
same as 14-usecase-complete.py, but using PANDAS and NetworkX instead of
Ringo

madmax:~/ringo/use-cases/07-benchmarks$ python 15-usecase-complete-pandas-networkx.py /dfs/ilfs2/0/ringo/StackOverflow_joined/posts.tsv out.pkl
[load posts text] Elapsed: 28.35 seconds, Length: 26673279
__loadpoststext__ cpu(s) 28.246 mem(MB) 4084.112
[select tag = 'python']Elapsed: 3.09 seconds, Length: 214856
__selecttagpython__ cpu(s) 3.065  mem(MB) 4084.112
[select question] Elapsed: 0.01 seconds, Length: 142207
__selectquestion__  cpu(s) 0.013  mem(MB) 4084.112
[select answer]   Elapsed: 1.78 seconds, Length: 142207
__selectanswer__  cpu(s) 1.770  mem(MB) 4084.112
[join]            Elapsed: 6.64 seconds, Length: 141816
__join__          cpu(s) 6.554  mem(MB) 5103.344
[graph]           Elapsed: 0.67 seconds, Length: 59343
__graph__         cpu(s) 0.665  mem(MB) 5103.344
[pagerank]        Elapsed: 28.88 seconds, Length: 59343
__pagerank__      cpu(s) 28.810 mem(MB) 5103.344
[save]            Elapsed: 0.11 seconds, Length: 59343
__save__          cpu(s) 0.012  mem(MB) 5103.344

----------------------
Benchmark 50:
- read input text file with two columns and build a PNGraph
- save PNGraph to file in the binary format

madmax3:/lfs/local/0/rok/ringo> time python 50-grtxt2bin.py soc-LiveJournal1-noheader.txt soc-LiveJournal1.graph
[load text]       Elapsed: 63.42 seconds, Nodes: 4847571, Edges: 68993773
__loadtext__            cpu(s) 63.370   mem(MB) 2173.488
[save bin]        Elapsed: 3.39 seconds, Nodes: 4847571, Edges: 68993773
__savebin__             cpu(s) 3.491    mem(MB) 2173.488

madmax3:/lfs/local/0/rok/ringo> time python 50-grtxt2bin.py twitter_rv.txt twitter_rv.graph
[load text]       Elapsed: 1796.63 seconds, Nodes: 41652230, Edges: 1468365182
__loadtext__            cpu(s) 1792.409 mem(MB) 25086.476
[save bin]        Elapsed: 67.87 seconds, Nodes: 41652230, Edges: 1468365182
__savebin__             cpu(s) 69.036   mem(MB) 25086.476

----------------------
Benchmark 51:
- read PNGraph from a file with the binary format
- calculate pagerank

madmax3:/lfs/local/0/rok/ringo> time python 51-grpagerank.py soc-LiveJournal1.graph
[load graph]      Elapsed: 5.08 seconds, Nodes: 4847571, Edges: 68993773
__loadbin__             cpu(s) 5.184    mem(MB) 992.084
[pagerank]        Elapsed: 5.11 seconds, Nodes: 4847571, Edges: 68993773
__pagerank__            cpu(s) 370.841  mem(MB) 1344.584
24 iterations in 4s

madmax3:/lfs/local/0/rok/ringo> time python 51-grpagerank.py twitter_rv.graph
[load graph]      Elapsed: 75.42 seconds, Nodes: 41652230, Edges: 1468365182
__loadbin__             cpu(s) 76.645   mem(MB) 15150.040
[pagerank]        Elapsed: 95.95 seconds, Nodes: 41652230, Edges: 1468365182
__pagerank__            cpu(s) 6379.563 mem(MB) 18337.412
21 iterations in 81s

----------------------
Benchmark 52:
- read input text file with two columns and build a PNEANet
- save PNEANet to file in the binary format

madmax3:/lfs/local/0/rok/ringo> time python 52-nettxt2bin.py soc-LiveJournal1-noheader.txt soc-LiveJournal1.net
[load text]       Elapsed: 70.86 seconds, Nodes: 4847571, Edges: 68993773
__loadtext__            cpu(s) 70.667   mem(MB) 6859.352
[save bin]        Elapsed: 9.22 seconds, Nodes: 4847571, Edges: 68993773
__savebin__             cpu(s) 9.198    mem(MB) 6859.352

madmax3:/lfs/local/0/rok/ringo> time python 52-nettxt2bin.py twitter_rv.txt twitter_rv.net
[load text]       Elapsed: 2068.26 seconds, Nodes: 41652230, Edges: 1468365182
__loadtext__            cpu(s) 2062.072 mem(MB) 101899.520
[save bin]        Elapsed: 205.42 seconds, Nodes: 41652230, Edges: 1468365182
__savebin__             cpu(s) 204.893  mem(MB) 101899.520

----------------------
Benchmark 53:
- read PNEANet from a file with the binary format
- calculate pagerank

madmax3:/lfs/local/0/rok/ringo> time python 53-netpagerank.py soc-LiveJournal1.net
[load graph]      Elapsed: 12.27 seconds, Nodes: 4847571, Edges: 68993773
__loadbin__             cpu(s) 12.244   mem(MB) 2805.776
[pagerank]        Elapsed: 21.75 seconds, Nodes: 4847571, Edges: 68993773
__pagerank__            cpu(s) 1460.664 mem(MB) 3227.024
24 iterations in 20s

madmax3:/lfs/local/0/rok/ringo> time python 53-netpagerank.py twitter_rv.net
[load graph]      Elapsed: 210.70 seconds, Nodes: 41652230, Edges: 1468365182
__loadbin__             cpu(s) 210.167  mem(MB) 52710.616
[pagerank]        Elapsed: 362.06 seconds, Nodes: 41652230, Edges: 1468365182
__pagerank__            cpu(s) 23470.793        mem(MB) 56418.312
21 iterations in 334s

